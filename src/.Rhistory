Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
sample(n,J,replace=T)
sample(n,J,replace=T)
sample(n,J,replace=T)
sample(n,J,replace=T)
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
GVec = rbinom(n, 2, 0.3)
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
yVec = sample(n, J, replace=T) - 1
getPvalER(yVec, GVec, muMat, iRMat)
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
StatVec
GVec
GVec = rep(1, n)  # should not be 0
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
hist(StatVec)
hist(StatVec)
GVec = sample(c(1,2), n, replace = T)  # should not be 0
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
hist(StatVec)
GVec
table(StatVec)
n = 10
J = 3
GVec = sample(c(1,2), n, replace = T)  # should not be 0
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
StatVec = getStatVec(b3, GVec, muMat, iRMat)
yVec = sample(n, J, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
SeqMat = makeSeqMat(n,J)
dim(SeqMat)
SeqMat = makeSeqMat(n,J)
StatVec = getStatVec(SeqMat, GVec, muMat, iRMat)
hist(StatVec)
3^10
?log
log(10,10)
log(10,2)
log(59049,3)
log(10000, 3:10)
maxN = log(30000, 3:10)
maxN = floor(maxN)
print(maxN)
maxN = log(30000, 3:10)
maxN = floor(maxN)
print(maxN)
maxN = log(50000, 3:10)
maxN = floor(maxN)
print(maxN)
power(1,1)
power(1)
exp(1,1)
?exp
maxN = log(50000, 3:10)
maxN = floor(maxN)
print(maxN)
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
n = 5
J = 3
GVec = sample(c(1,2), n, replace = T)  # should not be 0
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
SeqMat = makeSeqMat(n,J)
StatVec = getStatVec(SeqMat, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
set.seed(1)
makeSeqMat(3,2)
a = makeSeqMat(4,3)              # make a SeqMat with 4 subjects and 3 levels
b3 = updateSeqMat(a, 3, 3)       # make a sub-SeqMat with 3 subjects
b2 = updateSeqMat(a, 2, 3)       # make a sub-SeqMat with 2 subjects
b1 = updateSeqMat(a, 1, 3)       # make a sub-SeqMat with 1 subjects
# muMat2 = matrix(rep(1/3, 2*3),
#                 2,3)
# getProb(b2, muMat2)
n = 5
J = 3
GVec = sample(c(1,2), n, replace = T)  # should not be 0
muMat = matrix(runif(n*J), n, J)
muMat = muMat / rowSums(muMat)
iRMat = matrix(rnorm(n*(J-1)), n, J-1)
SeqMat = makeSeqMat(n,J)
StatVec = getStatVec(SeqMat, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
0.01062377 + 0.9893762
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
yVec = sample(J, n, replace=T) - 1  # from 0 to J-1
getPvalER(yVec, GVec, muMat, iRMat)
hist(StatVec)
hist(StatVec)
GVec
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples_POLMM_ER.cpp')
?POLMM
library(POLMM)
?POLMM
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
Rcpp::sourceCpp('~/Github/Wenjian_Tools/R/Rcpp/examples.cpp')
